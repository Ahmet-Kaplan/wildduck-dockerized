TLS_KEY_PATH=/etc/ssl/certs/araturka.key
TLS_CERT_PATH=/etc/ssl/certs/araturka.pem

# Port the application runs on; Optional; Default 3000
PORT=3030

# Serve DuckyPanel from DuckyApi; Optional; Default false
SERVE_DUCKYPANEL=true

# Custom Base URL; Required if SERVE_DUCKYPANEL=true; Default "/"
BASE_URL=/api

# JWT secret value. Set this to something safe and random. Should be the same accross all instances; Required
TOKEN_SECRET=iAIAbQJlinLEpZAvsAqe8fi59DF8wVcA5S8oPVbr

# MongoDB connection string. This can include authentication, ports, database name, multiple hosts for replica sets etc
# https://docs.mongodb.com/manual/reference/connection-string/
# https://www.iana.org/assignments/uri-schemes/prov/mongodb
# MongoDB is used to store API users and their domains; Required
MONGODB_URL=mongodb://mongo:27017/ducky-api

# Redis connection string. Only supports a single redis instance, sentinel support will be added in the future.
# https://www.iana.org/assignments/uri-schemes/prov/redis
# Redis is used for task queue management; Required
REDIS_URL=redis://redis/10

# URL for the WildDuck API; Required
WILDDUCK_API_URL=http://localhost:5438

# Token for authenticating against the WildDuck API; Optional
WILDDUCK_API_TOKEN=AvsAqe8fi59DF8wVcA5S8oPVbr

# If set to false WildDuck will check all new passwords against https://haveibeenpwned.com/Passwords; Optional; Default true
# ALLOW_UNSAFE_ACCOUNT_PASSWORDS=true

# Allow values such as *@example.com for forwarders and account aliases. user@* is never allowed; Optional; Default true
# ALLOW_FORWARDER_WILDCARD=true
# ALLOW_ACCOUNT_WILDCARD=true

# Array of MX record objects. These are suggested and checked in dnscheck; Required
MX_RECORDS=[{"exchange": "mx1.araturka.com", "priority": 10}, {"exchange": "mx2.araturka.com", "priority": 20}]

# SPF value to suggest in dnscheck; Required
SPF_CORRECT_VALUE=v=spf1 include:araturka.com -all

# Regex to test spf against in dnscheck; Optional
SPF_REGEX=^v=spf.* include:araturka.com.*(-|~|\\?)all$

# Enables dkim with the following selector by default when adding a domain; Optional
DEFAULT_DKIM_SELECTOR=ducky

# Serve UI for queues (background tasks) at /queues.; Optional; Default false
# QUEUE_UI=true

# Add basic auth to queue UI, this is recommended. QUEUE_UI_PASSWORD is required if QUEUE_UI_USER is set; Optional
# QUEUE_UI_USER=admin
# QUEUE_UI_PASSWORD=secret

# Delays every response by this amount of milliseconds. Can be useful during development; Optional
# DELAY=1000
